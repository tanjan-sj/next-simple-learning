import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import Alert from '@mui/material/Alert';
import AlertTitle from '@mui/material/AlertTitle';
import { useEffect, useState } from "react";


function ActionItems(props){
  return (
    <li> 
      {props.label} 
      <a href="#" 
        onClick={(e) => {
          e.preventDefault()
          props.handleChange(props.label)
        }} 
        style={{float: "right", marginLeft: "1rem"}}> 
        {props.action} 
      </a> 
    </li>
  )
}

function SelectedCountryCard({countryList, handleRemove}){
  return(
    <div className={styles.card} style={{width: "100%"}}>
      <h2>Selected</h2>
      <ul>
        {countryList.map(c => <ActionItems key={c} label={c} action={"-"} handleChange={handleRemove}/>)}
      </ul>
    </div>
  )
}

function AvailableCountryCard({countryList, handleAdd, alreadyAddedList}){
  return(
    <div className={styles.card} style={{width: "100%"}}>
      <h2>Choose From</h2>
      {
        (countryList.length == 0)  ? <span> Loading...</span> : 
        <ul>
          {countryList
            .filter(c => !alreadyAddedList.includes(c))
            .map(c => <ActionItems key={c} label={c} action={"+"} handleChange={handleAdd}/>)}
        </ul>
      }
      
    </div>
  )
}

export default function Home({allCountries}) {
  const [selectedCountries, setSelectedCountries] = useState([]);
  //const [allCountries, setAllCountries] = useState([]);

  // useEffect(function (){

  //   async function getDataAndUpdate(){
  //     const response = await fetch("https://restcountries.eu/rest/v2/all", {mode: 'no-cors'});

  //     if(!response.ok){
  //       console.log("fetching unsuccessful");
  //       return;
  //     }
  
  //     const result = await response.json();

  //     const countryNames = result.map(item => item.name);
  //     setAllCountries(countryNames);
  //   }

  //   getDataAndUpdate()

     
  // }, []);

  const handleAdd = (country) => {
    setSelectedCountries(selectedCountries.concat(country));
  }

  const handleRemove = (country) => {
    const updatedList = selectedCountries.filter(c => c !== country)
    setSelectedCountries(updatedList);
  }

  return (    
    <div className={styles.container}>
      
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <h1 className={styles.title}>
        Welcome to <a href="#" onClick={e => e.preventDefault()}>Test</a>
      </h1>

      <div className={styles.grid}>

        {/* <div className={styles.card} style={{width: "100%"}}>
          <h2>Selected</h2>
          <ul>
            {selectedCountries.map(c => <ActionItems key={c} label={c} action={"-"} handleChange={handleRemove}/>)}
          </ul>
        </div>

        <div className={styles.card} style={{width: "100%"}}>
          <h2>Choose From</h2>
          <ul>
            {someCountries.map(c => <ActionItems key={c} label={c} action={"+"} handleChange={handleAdd}/>)}
          </ul>
        </div> */}

        <SelectedCountryCard countryList={selectedCountries} handleRemove={handleRemove}/>
        <AvailableCountryCard countryList={allCountries} handleAdd={handleAdd} alreadyAddedList={selectedCountries}/>

      </div>

    </div>
  )
 }


export async function getServerSideProps() {
  console.log("Going to fetch...")
  const response = await fetch("https://restcountries.eu/rest/v2/all")
  if (!response.ok) {
    console.log("fetch was unsuccessful")
    return
  }

  const result = await response.json()
  console.log("result.length", result.length)

  const countryNames = result.map(item => item.name)

  return {
    props: {
      allCountries: countryNames
    }
  }
}